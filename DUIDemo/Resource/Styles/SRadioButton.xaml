<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DUIDemo.Resource.Styles">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="White"/>
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#DCDFE6"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>

    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#409EFF"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#409EFF"/>

    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>

    <Style x:Key="RadioButtonStyle_DUIDemo_SpeakerType" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource FontStyle_DUIDemo_SourceHanSansCNRegular}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource Auxiliary2.Normal.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Normal.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource Auxiliary2.Normal.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,0,16,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="3" x:Name="radioButtonOutBorder" CornerRadius="4"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}">
                        </Border>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                            <Border x:Name="radioButtonBorder" CornerRadius="7" Width="14" Height="14"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"  
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Ellipse x:Name="optionMark" Width="5" Height="5" Fill="White"
                                     Opacity="1"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"  
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="8,0,0,0" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.MouseOver.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.MouseOver.Foreground}"/>
                            <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.MouseOver.Border}"/>-->
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.MouseOver.Border}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.Pressed.Background}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Pressed.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.Pressed.Foreground}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonOutBorder" Value="{StaticResource Auxiliary2.Pressed.Border}"/>
                            <!--<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.Pressed.Border}"/>-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="true">
                                </Condition>
                                <Condition Property="IsChecked" Value="true">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.Pressed.Background}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Pressed.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.Pressed.Foreground}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonOutBorder" Value="{StaticResource Auxiliary2.Pressed.Border}"/>
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.Pressed.Border}"/>
                        </MultiTrigger>
                        <!--<Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false">
                                </Condition>
                                <Condition Property="IsChecked" Value="false">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.Disabled.Background}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Disabled.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.Disabled.Foreground}"/>
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.Disabled.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="false">
                                </Condition>
                                <Condition Property="IsChecked" Value="true">
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.Disabled.Background}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Disabled.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.Disabled.Foreground}"/>
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.Disabled.Border}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.Disabled.Border}"/>
                        </MultiTrigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.Disabled.Background}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Disabled.Border}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.Disabled.Foreground}"/>
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource Auxiliary2.Disabled.Border}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonStyle_DUIDemo_SpeakerBase" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource FontStyle_DUIDemo_SourceHanSansCNRegular}"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#FAFAFA"/>
        <Setter Property="BorderBrush" Value="#DCDFE6"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}" CornerRadius="20">
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="#5DC6B4"/>
                            <Setter Property="Foreground" Value="#5DC6B4"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" Value="#14CAB4"/>
                            <Setter Property="Foreground" Value="#14CAB4"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="#14CAB4"/>
                            <Setter Property="BorderBrush" Value="#14CAB4"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="RadioButtonStyle_DUIDemo_Speaker" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#FAFAFA"/>
        <Setter Property="BorderBrush" Value="#DCDFE6"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}" CornerRadius="20">
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="#14CAB4"/>
                            <Setter Property="Foreground" Value="#14CAB4"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" Value="#14CAB4"/>
                            <Setter Property="Foreground" Value="#14CAB4"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="#14CAB4"/>
                            <Setter Property="BorderBrush" Value="#14CAB4"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="RadioButtonStyle_DUIDemo_TabItem" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="{StaticResource FontStyle_DUIDemo_SourceHanSansCNRegular}"/>
        <Setter Property="Foreground" Value="#606266"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Foreground" Value="#4895EC"/>
                            <Setter Property="FontFamily" Value="{StaticResource FontStyle_DUIDemo_SourceHanSansCNMedium}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="#4895EC"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>