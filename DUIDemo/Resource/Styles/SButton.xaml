<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DUIDemo.Resource.Styles">

    <Style x:Key="ButtonStyle_DUIDemo_Normal" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Microsoft YaHei"/>
        <Setter Property="FontSize" Value="30"/>
    </Style>

    <Style x:Key="ButtonStyle_DUIDemo_SyntheticPlay" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="{StaticResource FontStyle_DUIDemo_SourceHanSansCNRegular}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Background" Value="#14CAB4"/>
        <Setter Property="BorderBrush" Value="#14CAB4"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Margin="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <StackPanel Orientation="Horizontal" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <TextBlock Text="&#xe766;"
                                   Style="{StaticResource TextBlockStyle_DUIDemo_iFont}">
                            </TextBlock>
                            <ContentPresenter x:Name="contentPresenter" Margin="8,0,0,0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#3BBDB0"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#3BBDB0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#14CAB4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#14CAB4"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="White"/>
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#DCDFE6"/>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>

    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#409EFF"/>
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#409EFF"/>

    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>

    <Style x:Key="ButtonStyle_DUIDemo_Lite" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="130"/>
        <Setter Property="FontFamily" Value="{StaticResource FontStyle_DUIDemo_SourceHanSansCNRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource Secondary.Normal.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Secondary.Normal.Border}"/>
        <Setter Property="Background" Value="{StaticResource Secondary.Normal.Background}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border Grid.ColumnSpan="2" x:Name="radioButtonOutBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Secondary.MouseOver.Foreground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Secondary.MouseOver.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Secondary.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Secondary.Pressed.Foreground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Secondary.Pressed.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Secondary.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Secondary.Disabled.Foreground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Secondary.Disabled.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Secondary.Disabled.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle_DUIDemo_Main" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="FontFamily" Value="{StaticResource FontStyle_DUIDemo_SourceHanSansCNRegular}"/>
        <Setter Property="Foreground" Value="{StaticResource Secondary.Normal.Foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Secondary.Normal.Border}"/>
        <Setter Property="Background" Value="{StaticResource Secondary.Normal.Background}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Border Grid.ColumnSpan="2" x:Name="radioButtonOutBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Secondary.MouseOver.Foreground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Secondary.MouseOver.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Secondary.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource Secondary.Pressed.Foreground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Secondary.Pressed.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Secondary.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource Secondary.Disabled.Foreground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Secondary.Disabled.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Secondary.Disabled.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle_DUIDemo_Close" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontStyle_DUIDemo_Icon}"/>
        <Setter Property="Content" Value="&#xe7df;"/>
        <Setter Property="FontSize" Value="19"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#8F9399"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="#8F9399"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle_DUIDemo_SpeakerStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Padding" Value="0,0,14,0"/>
        <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Normal.Border}"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Bd" Grid.ColumnSpan="2" BorderThickness="1" CornerRadius="4" 
                            BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Name="tbl_Arrow" Grid.Column="1" Text="&#xe7d3;" FontSize="14" 
                                       Foreground="{TemplateBinding BorderBrush}"
                                       Style="{StaticResource TextBlockStyle_DUIDemo_iFont}">
                            </TextBlock>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.MouseOver.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.MouseOver.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Pressed.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.Pressed.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.Pressed.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{StaticResource Auxiliary2.Disabled.Border}"/>
                            <Setter Property="Background" Value="{StaticResource Auxiliary2.Disabled.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource Auxiliary2.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>